name: Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy-app:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: app/
          file: app/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/homework:${{ github.run_id }}
            ${{ secrets.DOCKERHUB_USERNAME }}/homework:latest

      - name: Output image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Create K8S Kind Cluster
        uses: helm/kind-action@v1.4.0

      - name: Deploy with Helm
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: |
            helm dependency build ./chart
            helm upgrade --install homework ./chart \
            --namespace homework \
            --create-namespace \
            --values chart/values.yaml \
            --set mysql.auth.rootPassword=${{ secrets.MYSQL_PASSWORD }} \
            --set tag=${{ github.run_id }} \
            --set image=${{ secrets.DOCKERHUB_USERNAME }}/homework \
            --wait
          kubeconfig: '${{ secrets.KUBECONFIG }}'

      - name: Create database
        run: |
          kubectl get service
          kubectl get pods
          kubectl port-forward svc/homework-mysql 3306:3306 &
          mysql -u root -p"${{ secrets.MYSQL_PASSWORD }}" -h 127.0.0.1 homework < sql/users.sql

      - name: Run tests
        run: |
          kubectl port-forward svc/python-service 8000:8000 &
          curl -X GET http://localhost:8000
          curl -X POST -H "Content-Type: application/json" -d '{"name":"tim","email":"noreply@email.com","pwd":"my_password"}' http://localhost:8000/create
          curl -X GET http://localhost:8000/users
          curl -X GET http://localhost:8000/user/1
          curl -X POST -H "Content-Type: application/json" -d '{"name":"john","email":"my_email@email.com","pwd":"my_password","user_id":1}' http://localhost:8000/update
          curl -X GET http://localhost:8000/users
          curl -X GET http://localhost:8000/delete/1
          curl -X GET http://localhost:8000/users
          curl -X PUT
